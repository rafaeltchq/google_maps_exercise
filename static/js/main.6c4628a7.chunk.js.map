{"version":3,"sources":["components/MarkerStorage/Reducer.js","components/Searcher/SearchBox.js","components/GoogleMapWrapper/GoogleMapWrapper.js","components/MapContainer/MapContainer.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","markersPos","store","createStore","state","action","type","concat","payLoad","SearchBox","panTo","dispatch","useDispatch","usePlacesAutocomplete","requestOptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","className","onSelect","address","a","getGeocode","results","getLatLng","console","error","onChange","e","target","disabled","placeholder","map","id","description","GoogleMapWrapper","useSelector","mapRef","useRef","onMapLoad","useCallback","current","setZoom","useLoadScript","googleMapsApiKey","process","libraries","isLoaded","loadError","mapContainerClassName","zoom","center","onLoad","m","i","position","MapContainer","CssBaseline","Container","minwidth","Typography","component","style","backgroundColor","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c4628a7.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\nconst initialState = {\r\n    markersPos: []\r\n};\r\n\r\nconst reducerMarkers = (state = initialState, action) => {  \r\n    switch (action.type) {\r\n        case \"NEW_MARKER\":\r\n        return { ...state, markersPos: state.markersPos.concat(action.payLoad) };\r\n        default: return state\r\n    }\r\n};\r\nconst store = createStore(reducerMarkers);\r\nexport default store;","import React from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\n\r\nfunction SearchBox({ panTo }) {\r\n\r\n  const dispatch = useDispatch();\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: {\r\n        lat: () => 41.385251760995985,\r\n        lng: () => 2.1689619107290565,\r\n      },\r\n      radius: 200000,\r\n    },\r\n  });\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <Combobox\r\n        onSelect={async (address) => {\r\n          setValue(address, false);\r\n          clearSuggestions();\r\n          try {\r\n            const results = await getGeocode({ address });\r\n            const { lat, lng } = await getLatLng(results[0]);\r\n            dispatch({type: \"NEW_MARKER\", payLoad: {lat: lat, lng: lng}})\r\n            panTo({ lat, lng });\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        }}\r\n      >\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          placeholder=\"Buscar...\"\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\r\nimport SearchBox from \"../Searcher/SearchBox\";\r\n\r\nconst GoogleMapWrapper = () => {\r\n\r\n  const markersPos = useSelector((state) => state.markersPos);\r\n  \r\n  const mapRef = useRef();\r\n\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(14);\r\n  },[]);\r\n\r\n  const center = {\r\n    lat: 41.385251760995985,\r\n    lng: 2.1689619107290565,\r\n  };\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n    libraries: [process.env.REACT_APP_GOOGLE_MAP_LIB],\r\n  });\r\n\r\n  if (loadError) return \"Map loading error...\";\r\n  if (!isLoaded) return \"Loading map...\";\r\n\r\n  return (\r\n    <>\r\n      <SearchBox panTo={panTo} />\r\n      <GoogleMap\r\n      mapContainerClassName=\"mapWrapper\"\r\n        zoom={10}\r\n        center={center}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {markersPos.map((m, i) => \r\n          <Marker key={i} position={m} />\r\n        )}\r\n      </GoogleMap>\r\n    </>\r\n  );\r\n};\r\nexport default GoogleMapWrapper;\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport GoogleMapWrapper from \"../GoogleMapWrapper/GoogleMapWrapper\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction MapContainer() {\r\n  return (\r\n    <CssBaseline>\r\n      <Container minwidth=\"xl\">\r\n        <Typography\r\n          component={GoogleMapWrapper}\r\n          style={{ backgroundColor: \"#cfe8fc\", height: \"100vh\" }}\r\n        />\r\n      </Container>\r\n    </CssBaseline>\r\n  );\r\n}\r\nexport default MapContainer;\r\n","import MapContainer from \"./components/MapContainer/MapContainer\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <MapContainer />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./components/MarkerStorage/Reducer\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}